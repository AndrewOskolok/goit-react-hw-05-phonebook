{"version":3,"sources":["components/AddContact/AddContact.module.css","components/SingleContact/SingleContact.module.css","components/FilterContacts/FilterContacts.module.css","components/AddContact/AddContact.js","components/SingleContact/SingleContact.js","components/AllContacts/AllContacts.js","components/FilterContacts/FilterContacts.js","components/Alert/Alert.js","App.js","index.js"],"names":["module","exports","Phonebook","setContacts","contacts","setShowAlert","useState","name","setName","number","setNumber","className","styles","form","autoComplete","onSubmit","e","preventDefault","find","contact","status","text","setTimeout","length","localStorage","setItem","JSON","stringify","id","uuidv1","inputName","type","placeholder","value","onChange","target","inputnumber","button","SingleContact","deleteContact","listItem","contactName","contactNumber","contactButton","onClick","AllContacts","filter","filterContacts","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","FilterContacts","inputFilter","wrapper","input","Alert","showAlert","App","setFilter","useEffect","getItem","state","parse","in","appear","AddContact","item","newArr","mountOnEnter","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b709875.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__dnHdb\",\"inputName\":\"AddContact_inputName__3V0vz\",\"inputnumber\":\"AddContact_inputnumber__Bdp6I\",\"button\":\"AddContact_button__24v20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"SingleContact_listItem__2KdqR\",\"contactName\":\"SingleContact_contactName__1boXe\",\"contactNumber\":\"SingleContact_contactNumber__1L6ES\",\"contactButton\":\"SingleContact_contactButton__2A1AB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilterContacts_wrapper__3Ye0u\",\"input\":\"FilterContacts_input__3FQEh\"};","import React, { useState } from \"react\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./AddContact.module.css\";\r\n\r\nconst Phonebook = ({ setContacts, contacts, setShowAlert }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const inputName = ({ target }) => {\r\n    setName(target.value);\r\n  };\r\n\r\n  const inputNumber = ({ target }) => {\r\n    setNumber(target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      setShowAlert({ status: true, text: \"Contact already exist\" });\r\n      setTimeout(() => {\r\n        setShowAlert({ status: false, text: \"\" });\r\n      }, 2000);\r\n      return;\r\n    }\r\n    if (name.length < 2) {\r\n      setShowAlert({ status: true, text: \"Name mast content 2 characters\" });\r\n\r\n      setTimeout(() => {\r\n        setShowAlert({ status: false, text: \"\" });\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(\r\n      \"localContacts\",\r\n      JSON.stringify([{ name, number, id: uuidv1() }, ...contacts])\r\n    );\r\n\r\n    setContacts([{ name, number, id: uuidv1() }, ...contacts]);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} autoComplete=\"off\" onSubmit={submitHandler}>\r\n      <input\r\n        className={styles.inputName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={inputName}\r\n      ></input>\r\n      <input\r\n        className={styles.inputnumber}\r\n        type=\"text\"\r\n        name=\"number\"\r\n        placeholder=\"Nubmer\"\r\n        value={number}\r\n        onChange={inputNumber}\r\n      ></input>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contacts\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nPhonebook.propTypes = {\r\n  setContacts: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  setShowAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./SingleContact.module.css\";\r\n\r\nconst SingleContact = ({ name, number, id, deleteContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.contactName}>{name}</p>\r\n      <p className={styles.contactNumber}>{number}</p>\r\n      <button\r\n        className={styles.contactButton}\r\n        onClick={() => deleteContact(id)}\r\n      >\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nSingleContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SingleContact;\r\n","import React from \"react\";\r\nimport SingleContact from \"../SingleContact/SingleContact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport \"./AllContacts.css\";\r\n\r\nconst AllContacts = ({ contacts, filter, deleteContact }) => {\r\n  const filterContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter)\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {filterContacts.map(({ name, number, id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"listItem\">\r\n          <SingleContact\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            deleteContact={deleteContact}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nAllContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AllContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterContacts.module.css\";\r\n\r\nconst FilterContacts = ({ inputFilter }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"Find contacts by name\"\r\n        onChange={inputFilter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterContacts.propTypes = {\r\n  inputFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ showAlert }) => {\r\n  return <div className=\"alert\">{showAlert}</div>;\r\n};\r\n\r\nAlert.propTypes = {\r\n  showAlert: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AddContact from \"./components/AddContact/AddContact\";\nimport AllContacts from \"./components/AllContacts/AllContacts\";\nimport FilterContacts from \"./components/FilterContacts/FilterContacts\";\nimport Alert from \"./components/Alert/Alert\";\nimport { CSSTransition } from \"react-transition-group\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [showAlert, setShowAlert] = useState({ status: false, text: \"\" });\n\n  const inputFilter = ({ target }) => {\n    setFilter(target.value.toLowerCase());\n  };\n\n  const deleteContact = (id) => {\n    setContacts((state) => state.filter((item) => item.id !== id));\n    const localArr = JSON.parse(localStorage.getItem(\"localContacts\"));\n    const newArr = localArr.filter((item) => item.id !== id);\n    localStorage.setItem(\"localContacts\", JSON.stringify(newArr));\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"localContacts\")) {\n      localStorage.setItem(\"localContacts\", JSON.stringify([]));\n    }\n    setContacts((state) => JSON.parse(localStorage.getItem(\"localContacts\")));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"title\">\n        <h1 className=\"title\">Phonebook</h1>\n      </CSSTransition>\n      <AddContact\n        setContacts={setContacts}\n        contacts={contacts}\n        setShowAlert={setShowAlert}\n      />\n      {contacts.length > 1 && <FilterContacts inputFilter={inputFilter} />}\n      {contacts.length > 0 && (\n        <AllContacts\n          contacts={contacts}\n          filter={filter}\n          deleteContact={deleteContact}\n        />\n      )}\n\n      <CSSTransition\n        in={showAlert.status}\n        timeout={250}\n        classNames=\"alert\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <Alert showAlert={showAlert.text} />\n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}